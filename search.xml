<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>好玩的资料</title>
      <link href="/2023/07/13/%E5%A5%BD%E7%8E%A9%E7%9A%84%E8%B5%84%E6%96%99/"/>
      <url>/2023/07/13/%E5%A5%BD%E7%8E%A9%E7%9A%84%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<h1 id="更新日期-2023-7-13"><a href="#更新日期-2023-7-13" class="headerlink" title="更新日期 2023.7.13"></a>更新日期 2023.7.13</h1><h2 id="搞笑片段"><a href="#搞笑片段" class="headerlink" title="搞笑片段"></a>搞笑片段</h2><p>一定要看！！！<a href="https://www.luogu.com.cn/paste/jlu4dimu"><del>化学</del></a></p><p><img src="https://xzmfhome.github.io/img/avatar.jpg"></p><p>一群伟大的科学家死后在天堂里玩藏猫猫，轮到爱因斯坦抓人，他数到100睁开眼睛，看到所有人都藏起来了，只见伏特趴在不远处。 爱因斯坦走过去说：“伏特，我抓住你了。” 伏特说：“不，你没有抓到我。” 爱因斯坦：“你不是伏特你是谁？” 伏特：“你看我身下是什么？” 爱因斯坦低头看到在伏特身下，居然是安培！ 伏特：“我身下是安培，我俩就是伏特&#x2F;安培，所以你抓住的不是我，你抓住的是欧姆！ .” 爱因斯坦反应迅速，于是改口喊，“欧姆，我抓住你了！” 说时迟那时快，伏特和安培一个鱼跃站了起来，但是仍然紧紧抱在一起， 爱因斯坦大惑～ 他俩不紧不慢地说，现在，我们不再是欧姆，而是伏特×安培， 变成瓦特了～ 爱因斯坦觉得有道理，于是喊，那我终于抓到你了，瓦特！ 这时候，安培慢慢悠悠地说：“你看我俩这样抱着已经有好几秒了，所以，我们不再是瓦特，而是瓦特×秒， 我们现在是焦耳啦～” 爱因斯坦被说的哑口无言，于是默默地转过身，这时，他看到牛顿站在不远处，爱因斯坦于是跑过去说：“牛顿，我抓住你了。” 牛顿：“不，你没有抓到牛顿。” 爱因斯坦：“你不是牛顿你是谁？” 牛顿：“你看我脚下是什么？” 爱因斯坦低头看到牛顿站在一块长宽都是一米的正方形的地板砖上，不解。 牛顿：“我脚下这是一平方米的方块，我站在上面就是牛顿&#x2F;平方米，所以你抓住的不是牛顿，你抓住的是帕斯卡” 爱因斯坦倍受挫折，终于忍无可忍地爆发了，于是飞起一脚，踹在牛顿身上，把牛顿踹出了那块一平米的地板砖， 然后吼到：“说！你还敢说你是帕斯卡？？” 牛顿慢慢地从地上爬起来，说：“不，我已经不是帕斯卡了，你刚刚让我牛顿移动了一米的距离，所以，我现在也是焦耳了。” ——田垒硕</p><hr><p>唧唧复唧唧，木兰开飞机，开的什么机？波音七四七！</p><p>问女何所思，问女何所忆。女亦有所思，没钱买飞机。昨夜见军帖，要用轰炸机，飞机十二架，架架买不起。阿爷无大钱，木兰无金银，愿去买铁皮，从此造飞机。</p><p>东市买图纸，西市买螺丝，南市买玻璃，北市买铁皮。旦辞爷娘去，暮宿旧机库，不闻爷娘唤女声，但闻铁皮摩擦滋啦啦。旦辞机库去，暮至军营旁，不闻爷娘唤女声，但闻将军大呼娃哈哈。</p><p>万里开飞机，关山一下没。热气传机翼，日光照玻璃。将军被吓死，壮士魂已飞。敌方损一万，己方死五千。</p><p>飞来撞天子，天子躺灵床。策勋十二转，赏赐俩耳光。可汗问其故，木兰不用上牢房，愿开七四七，飞着回故乡。</p><p>爹娘闻女来，端起重机枪；阿姊闻妹来，当户造核弹；小弟闻姊来，磨刀霍霍向村庄。开我机舱门，进我飞机仓，脱我战时袍，换上飞行装。多装热核弹，对外架机枪。出门埋地雷，亲友皆惊忙：离别十二年，不知木兰变猖狂。</p><p>疯子脚蹬地，呆子眼紧闭，两人并排走，谁能说我不正常？</p><hr><p>1、据研究每呼吸60秒，就减少1分钟寿命</p><p>2、谁能想到，一名16岁少女，4年前只是一位12岁少女</p><p>3、中国人在睡觉时，大多数美国人在工作</p><p>4、中国教英语方式有极大错误，在美国就连小学生都能说一口流利的英语</p><p>5、如果你每天省下来一包烟钱，10天后你就能买10包烟</p><p>6、当你左脸被打，你的右脸就不会痛</p><p>7、 当蝴蝶在南半球拍了两下翅膀，它就会稍微飞高一些</p><p>8、当你吃下了20碗米饭，换算下来竟然相当于摄入了20碗米饭的热量</p><p>9、凡是每天憋尿过多的人，有高几率100年内死去</p><p>10、人被杀，就会死</p><p>11、各科老师被困在电梯里的反应：语文老师正在写遗书。 数学老师开始计算电梯的长宽高。 英语老师开始说起电梯英语单词和相关句子。 物理老师在计算说几小时空气会呼吸完。 化学老师在检查这个电梯的材质。 生物老师在考虑他们需要的物质比如氧气。美术老师在画遗像。 地理老师在计算纬度叫人来救她们。 历史老师开始感慨。 政治老师准备告物业。 体育老师默默走向电梯门口，一脚把门踹开说了句：我们走吧。 事实证明体育这门科目才是主科！</p><p>12、到现在为止，世界上不得不承认的六个事实，请别吃惊</p><p>1.你的脖子转不了两圈</p><p>2.你数不了你的头发有多少根</p><p>3.当你伸出舌头的时候你不能用鼻子呼吸</p><p>4.你正在做第三条</p><p>5.当你在做第三条的时候，其实你觉得是可行的，但是你看起来会像小狗狗一样</p><p>6.你现在在笑，并且笑喷了</p><hr><p>⑴ “隔壁小明玩游戏吗？”</p><p>“玩！”</p><p>“他成绩好吗？”</p><p>“好！”</p><p>“你知道他为啥玩游戏吗？因为他学习好！”</p><p>⑵ “隔壁小明玩游戏吗？”</p><p>“玩！”</p><p>“他成绩好吗？”</p><p>“不好！”</p><p>“你知道他为啥成绩差吗？因为他打游戏！”</p><p>⑶ “隔壁小明玩游戏吗？”</p><p>“不玩！”</p><p>“他成绩好吗？”</p><p>“好！”</p><p>“你知道他为啥成绩好吗？因为他不打游戏！”</p><p>⑷</p><p>“隔壁小明玩游戏吗？”</p><p>“不玩！”</p><p>“他成绩好吗？”</p><p>“不好！”</p><p>“你知道他为啥不打游戏吗？因为他知道自己成绩差！”</p><p>文理之战 物理x政治</p><p>“好久不见，政治。”物理微笑道。政治依然是那副波澜不惊的神色，眼底幽寂，深不可测。</p><p>他一步步地走向了政治：“身为文综最强的你，是唯一有资格成为我对手的学科。”政治从容不迫地回答道：“阁下谬赞了。”声音低沉如故。</p><p>物理只觉得恶心。</p><p>政治生着一张永远年轻的脸孔，尽管这张脸会随着岁月的变迁而改变样貌，却从未被岁月划下一丝皱纹。他习惯摆出一副沉稳谦逊的模样，可物理清楚，这个不老不死的诡异学科内里是如何老奸巨猾。</p><p>一枚硬币从物理手中脱离，完成了一次完美的自由落体运动，恰恰落在二人直线距离的中央。“正面，我先出手。”物理毫不客气地公布结果。政治微眯凤眸，唇角，是一丝不易察觉的弧度。</p><p>“力改变物体的运动状态！”</p><p>物理向一个特殊的角度有力地喝道，声波触碰到了摆在空间中的石膏几何体，大大小小的几何体忽然开始缓缓地匀速直线运动起来。</p><p>“加速度正向递增。”物理双手一挥，几何体旋即向政治的方向迅速撞去。</p><p>政治的脸上没有丝毫惧色。</p><p>“爱国敬业诚信友善，富强民主文明和谐。”两道防护墙凭空腾起，挡住了石膏几何体的攻击。</p><p>“马克思主义哲学为具体科学的研究提供正确的世界观和方法论！”</p><p>刹那间，两道防护墙幻化成利刃向物理刺去。物理敏捷一闪躲过了攻击，两道利刃却穷追不舍。物理暗骂道：“该死的，竟然这么快就就启用必修四！”</p><p>“理想条件下物体总保持静止或匀速直线运动！”两道利刃的速度依旧迅猛，但不再改变追击方向和加速度。物理灵巧地改变逃跑方向：“视重为零时，物体完全失重！”两道利刃撞在了一道顺空而起的墙上，哐当跌落在地。</p><p>“价格围绕价值上下波动！”</p><p>两道利刃忽然如同活了起来般，腾空而起向物理疯狂袭击，物理还没来得及躲避便被利刃划伤了背部。“贫富差距影响社会总体消费水平。”</p><p>两道利刃左右相逼，物理的身上又新添了两道伤。</p><p>该死的，这不行！再被他划两道游戏就结束了！</p><p>于是物理大声喊道：“初速度等于末速度减去加速度与时间之积！”奇迹出现了，两道利刃的主动权迅速转移到了物理的手中，“量不够，a来凑！”利刃改变运动方向，转而向政治刺去。</p><p>政治的眼底忽然闪过了一丝涟漪，但又迅速恢复了平静。“国家应以经济建设为中心，大力发展生产力。”两道利刃蓦然静止。 “AABCD。”</p><p>物理猛然诧异。他完全没有想过，政治会使用选择题答案作弊。几何体，防护墙，利刃，统统幻灭为了尘埃。</p><p>……</p><p>物理举起了双手。</p><p>政治满意地笑了。“果然，你永远都是笑到最后的赢家。”物理不甘地看着他。</p><p>当政治转身的一瞬间，物理冷冷地道：“AC DB AB DD AD ABCD”</p><p>政治的背后迅速被划下五道裂痕。</p><p>“别忘了，物理选择题的分值比政治多得多。</p><hr><p>一天地理老师问：同学们，河水向哪里流呀?</p><p>一学生猛站起来唱到：大河向东流啊。</p><p>老师没理会他，接着说：天上有多少颗星星啊?</p><p>那位同学又唱到：天上的星星参北斗啊！</p><p>老师气急：你给我滚出去!</p><p>学生：说走咱就走啊！</p><p>老师无奈说：你有病吧?</p><p>学生：你有我有全都有啊!</p><p>老师：你再说一句试试…！</p><p>学生：路见不平一声吼啊!</p><p>老师：你信不信我揍你?</p><p>学生：该出手时就出手啊！</p><p>老师怒：我让你退学!</p><p>学生：风风火火闯九州啊！</p><hr><p>如果26个英文字母：</p><p>A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p><p>分别等于：</p><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26</p><p>那么：</p><p>Knowledge（知识）：K+N+O+W+L+E+D+G+E &#x3D; 11+14+15+23+12+5+4+7+5 &#x3D; 96%。</p><p>Workhard（努力工作）：W+O+R+K+H+A+R+D &#x3D; 23+15+18+11+8+1+18+4 &#x3D; 98%。</p><p>也就是说知识和努力工作对我们人生的影响可以达到96％和98％。</p><p>Luck（好运）：L+U+C+K &#x3D; 12+21+3+11 &#x3D; 47%。</p><p>Love（爱情）：L+O+V+E &#x3D; 12+15+22+5 &#x3D; 54%。</p><p>看来，这些我们通常认为重要的东西却并没起到最重要的作用。</p><p>那么，什么可以决定我们100％的人生呢？</p><p>是Money（金钱）吗？</p><p>Money（金钱）：M+O+N+E+Y &#x3D; 13+15+14+5+25 &#x3D; 72%。</p><p>看来也不是。</p><p>是Leadership（领导能力）吗？</p><p>Leadership（领导能力）：L+E+A+D+E+R+S+H+I+P &#x3D; 12+5+1+4+5+18+19+9+16 &#x3D; 89%。</p><p>还不是。</p><p>金钱，权力也不能完全决定我们的生活，那是什么呢？</p><p>其实，真正能使我们生活圆满的东西就在我们的代码里面！</p><p>是iostream（C++输入输出流头文件）</p><p>I+O+S+T+R+E+A+M &#x3D; 9+15+19+20+18+5+1+13 &#x3D; 100%。</p><p>所以坚持写代码吧……</p><hr><p><a href="https://www.luogu.com.cn/paste/9eia4b3n">C++之歌</a></p><hr><p>刷题是一种出路</p><p>枚举是一种思想</p><p>打表是一种勇气</p><p>搜索是一种信仰</p><p>剪枝是一种精神</p><p>AK是一种幻想</p><p>WA是一种绝望</p><p>TLE是一种痛苦</p><p>RE是一种放弃</p><p>UKE是一种无奈</p><p>AC是一种原谅</p><p>骗分是一种日常</p><p>弃赛是一种颓废</p><p>吊打是一种必然</p><p>进队是一种奢望</p><p>NOI是一种梦想</p><hr><p><strong>你题比我做得多，我就会睡不着；睡不着，上课我就犯困；犯困，我就会被老师骂；被老师骂，我就会伤心；我伤心，就会放弃学习；放弃学习，我就会不能毕业；不能毕业，我就会找不到工作；找不到工作做， 我就会挣不到钱；挣不到钱，我就会没钱纳税；没钱纳税，国家就会难发工资给老师；老师领不到工资， 就会没心情教学；老师没心情教学，就会影响我们祖国的未来；影响了祖国的未来，中国就难以腾飞；中国难以腾飞，国人颜面何存；国人没有颜面，老师怎么会有颜面；老师没有颜面，就会不想教学，就会辞职不干；老师辞职不干，中国教育就会落后；中国教育落后，中华民族就会成为野蛮的民族；中华民族成了野蛮的民族，美国就会怀疑我国有大规模杀伤性武器；我国有大规模杀伤性武器，美国就会向中国开战；美国向中国开战，第三次世界大战就会爆发；第三次世界大战爆发，其中一方必定会实力不足；实力不足，就会动用核武器；动用核武器，就会破坏自然环境；自然环境被破坏，大气层就会破个大洞；大气层破个大洞，地球温度上升，两极冰山就会融化；冰山融化，地球水位就会上升；地球水位上升，全人类就会被淹死…… 而这一切都是因为你题比我做得多，你就会成为人类的罪人！！！</strong></p><hr><p><a href="https://www.mfstem.org/user/265">张修齐</a>：自从我装流氓软件被我爸揍了后，我就再也不装流氓软件了……</p><p>某同学：你爸为什么揍你，不揍流氓软件？</p><hr><p>班长：我们去炸<a href="https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&rsv_idx=1&tn=baidu&wd=%E9%9D%96%E5%9B%BD%E7%A5%9E%E7%A4%BE&fenlei=256&rsv_pq=0xe164dcc9000424ba&rsv_t=741eBAqvYa7B1yZPU0qo8p7928A1mPLGe17z4DwWY0Kujr/BCvaaKZT7qgJ4&rqlang=en&rsv_enter=1&rsv_dl=ib&rsv_sug3=12&rsv_sug1=12&rsv_sug7=100">靖国神社</a>吧</p><p>副班长：好主意</p><p>化学课代表负责研制炸弹</p><p>数学课代表负责计算爆破面积</p><p>英语课代表负责出国采购材料</p><p>物理课代表负责组装炸弹</p><p>地理课代表负责运送炸弹到指定地点</p><p>体育课代表负责引爆炸弹</p><p>历史课代表负责记录光辉瞬间</p><p>生物课代表负责事后生态环境</p><p>语文课代表负责乱写文章推卸责任</p><p>政治课代表负责用法律打官司</p><hr><p>转自<a href="https://www.mfstem.org/user/265">张修齐</a>：</p><p>旭元，多么有内涵的名字，可惜姓程</p><p>余歌，多么优雅的名字，可惜姓章</p><p>子腾，多么豪放的名字，可惜姓杜</p><p>珍香，多么有年代感的名字，可惜姓史</p><p>董溪，多么仙气的名字，可惜姓苟</p><p>玦玑，多么深奥的名字，可惜姓蛙</p><p>寿，多么吉利的名字，可惜姓秦</p><p>豪驰，多么阔气的名字，可惜也姓史</p><p>嘉乐，多么快乐的名字，偏偏姓农</p><p>黛，多么美丽的名字，可惜姓白</p><p>守涛，多么老实的名字，可惜姓回</p><p>逸芝，多么典雅的名字，可惜姓朱</p><p>申今，多么古风的名字，可惜姓卫</p><p>尚偃，多么好听的名字，偏偏姓毕</p><p>丽晶，多么闪亮的名字，可惜姓胡</p><p>欢喜，多么令人开心的名字，可惜姓白</p><p>舍墨，多有书香气的名字，可惜姓魏</p><p>婉仪，多么动听的名字，可惜姓司马</p><p>叫仁投也很不错的，可惜姓宋</p><p>周率，多么有科技感的名字，可惜姓袁</p><p>初墨，多么优雅的一个名字，可惜他姓熊；</p><p>绮艳，多么艳丽的一个名字，可惜她姓杜；</p><p>拔杰，多么高端的一个名字，可惜他姓朱；</p><p>渔歌，多么诗意的一个名字，可惜他姓章；</p><p>秋波，多么多情的一个名字，正好他姓宋；</p><p>巅峰，多么大气的一个名字，可惜他姓杨；</p><p>列宪，多么庄重的一个名字，可惜他姓钱；</p><p>勇驰，多么正经的一个名字，可惜他姓尤；</p><p>紫藤，多么大方的一个名字，可惜他姓杜；</p><p>光大，多么志气的一个名字，可惜他姓庞；</p><p>安富，多么本分的一个名字，可惜他姓魏；</p><p>逸群，多么高雅的一个名字，可惜他姓朱；</p><p>厚根，多么朴实的一个名字，可惜他姓侥；</p><p>乾恕，多么谨慎的一个名字，可惜他姓姚；</p><p>家财，多么土豪的一个名字，可惜她姓段；</p><p>付宝，多么通俗的一个名字，正好他姓支；</p><p>电球，多么刺眼的一个名字，正好他姓闪；</p><p>蓉蓉，多么可爱的一个名字，正好她姓毛；</p><p>洁荷，多么温婉的一个名字，可惜她姓费。</p><hr><p>弟弟：哥哥，你在玩什么游戏呀？</p><p>哥哥：羊了个羊。</p><p>弟弟：玩得怎么样？</p><p>哥哥：凉了个凉。</p><p>弟弟：感觉怎么样？</p><p>哥哥：娘了个娘！</p><p>弟弟：试试<a href="https://www.mfstem.org/p/1758">喵了个喵</a>吧。</p><p>妈妈：你们再不戴口罩就阳了个阳了！</p><hr><p>以前，大羊对小羊说：不要出去，外面有狼！</p><p>现在，大狼对小狼说：不要出去，外面有 <del>阳</del> 羊！</p><hr><p>老师：歌唱比赛取消了！</p><p>全班：No！！！</p><p>老师：四年级封控了，一个班所有老师都隔离了，剩下5个班只剩语文老师，他们的课程表是：</p><table><thead><tr><th>第几节课</th><th>什么课</th></tr></thead><tbody><tr><td>第一节课</td><td>语文</td></tr><tr><td>第二节课</td><td>语文</td></tr><tr><td>第三节课</td><td>语文</td></tr><tr><td>第四节课</td><td>语文</td></tr><tr><td>中午</td><td>语文</td></tr><tr><td>第五节课</td><td>语文</td></tr><tr><td>第六节课</td><td>语文</td></tr><tr><td>第七节课</td><td>语文</td></tr><tr><td>延时服务</td><td>语文</td></tr></tbody></table><p>全班：好惨！</p><p>我：一个月整本书学完了</p><hr><p>请问 A×C&#x3D;?</p><p>数学系： AC</p><p>计算机系：100</p><p>A×K 呢?</p><p>数学系： AK</p><p>CSPer：400</p><hr><p>老师： 2×x 怎么缩写？</p><p>全班： 2x</p><p>老师： 1×x ？</p><p>全班： x</p><p>老师： a×b ？</p><p>全班： ab</p><p>老师： a×a ？</p><p>某同学： aa</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资料 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「一本通 6.2 练习 3」Goldbach&#39;s Conjecture</title>
      <link href="/2023/07/12/%E3%80%8C%E4%B8%80%E6%9C%AC%E9%80%9A-6-2-%E7%BB%83%E4%B9%A0-3%E3%80%8DGoldbach-s-Conjecture/"/>
      <url>/2023/07/12/%E3%80%8C%E4%B8%80%E6%9C%AC%E9%80%9A-6-2-%E7%BB%83%E4%B9%A0-3%E3%80%8DGoldbach-s-Conjecture/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 1e9 + 7;</span><br><span class="line">int pr[N / 5], ct;</span><br><span class="line">bool isP[N];</span><br><span class="line">int ass() &#123;</span><br><span class="line">    isP[1] = true, isP[0] = true;</span><br><span class="line">    for (int i = 2; i &lt; 1e5 + 1; ++i) &#123;</span><br><span class="line">        if (isP[i]) continue;</span><br><span class="line">        pr[++ct] = i;</span><br><span class="line">        for (int j = i + i; j &lt; 1e5 + 1; j += i)</span><br><span class="line">            isP[j] = true;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">    ass();</span><br><span class="line"></span><br><span class="line">    while (1 + 1 == 2) &#123;</span><br><span class="line">        int x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        if (x == 0) break;</span><br><span class="line">        if (x == 1 || x == 2 || x % 2 != 0) &#123;</span><br><span class="line">            cout &lt;&lt; &quot;Goldbach&#x27;s conjecture is wrong.\n&quot;;</span><br><span class="line">            continue;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        bool s = 0;</span><br><span class="line">        for (int i = 3; i &lt;= x; i++) &#123;</span><br><span class="line">            if (!isP[i] &amp;&amp; !isP[x - i]) &#123;</span><br><span class="line">                cout &lt;&lt; x &lt;&lt; &quot; = &quot; &lt;&lt; i &lt;&lt; &quot; + &quot; &lt;&lt; x - i &lt;&lt; endl; s = 1;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        if (s == 0) &#123;</span><br><span class="line">            cout &lt;&lt; &quot;Goldbach&#x27;s conjecture is wrong.\n&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 沐枫sun1330 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 答案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建 hexo</title>
      <link href="/2023/07/12/forza-horizon-4-1/"/>
      <url>/2023/07/12/forza-horizon-4-1/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-3-hexo-github"><a href="#hexo-3-hexo-github" class="headerlink" title="hexo+ 3-hexo + github"></a>hexo+ 3-hexo + github</h1><p><a href="xzmfhome.github.io/hexod/">文章来源于知乎</a></p><p><a href="xzmfhome.github.io/hexod/node-v18.16.1-x64.msi">node.js高速下载18.16</a></p><p><a href="xzmfhome.github.io/hexod/Git-2.41.0-64-bit.exe">GIT高速下载</a></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>素数筛法</title>
      <link href="/2023/07/12/%E7%B4%A0%E6%95%B0%E7%AD%9B%E6%B3%95/"/>
      <url>/2023/07/12/%E7%B4%A0%E6%95%B0%E7%AD%9B%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="输出-1e5-7-以内的所有素数"><a href="#输出-1e5-7-以内的所有素数" class="headerlink" title="输出 1e5+7 以内的所有素数"></a>输出 1e5+7 以内的所有素数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">isP</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x&lt;<span class="number">2</span> || (x&gt;<span class="number">2</span> &amp;&amp; x%<span class="number">2</span>==<span class="number">0</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i*i &lt;= x; i += <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">clock_t</span> start, end;</span><br><span class="line">    start = clock();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; N; ++i)</span><br><span class="line">        <span class="keyword">if</span> (isP(i)) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;time: %d\n&quot;</span>, end-start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Copy<br>埃氏筛</p><hr><p>除了能够检验给定整数 𝑥 是否为素数的函数之外，如果能够事先准备好素数表就可以帮助我们更有效地求解素数的相关问题。埃拉托色尼筛选法（Sieve of Eratosthenes）可以快速列举出给定范围内的所有素数。</p><p><img src="https://www.mfstem.org/file/2/%E5%9F%83%E6%B0%8F%E7%AD%9B.gif"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">   <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line">   using namespace <span class="built_in">std</span>;</span><br><span class="line">   <span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line">   <span class="type">int</span> pr[N/<span class="number">5</span>], ct;</span><br><span class="line">   <span class="type">bool</span> isP[N];<span class="comment">// true表示不是素数</span></span><br><span class="line">   <span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">clock_t</span> start, end;</span><br><span class="line">       start = clock();</span><br><span class="line">       isP[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; N; ++i) &#123;</span><br><span class="line">           <span class="keyword">if</span> (isP[i]) <span class="keyword">continue</span>;</span><br><span class="line">           pr[++ct] = i;</span><br><span class="line">           <span class="keyword">for</span> (<span class="type">int</span> j = i+i; j &lt; N; j += i)</span><br><span class="line">               isP[j] = <span class="literal">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       end = clock();</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;time: %d\n&quot;</span>, end-start);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>欧拉筛(线性筛)</p><hr><p>埃氏筛有一个缺点，每个数会被筛多次。</p><p>可以考虑将每个数都只用它最小的质因数筛掉，例如：8 被 2×4 筛掉，27 被 3×9 筛掉，……。</p><p>由此我们设计出欧拉筛的算法：<strong>用每个数 x（不论是否是素数）从最小的质数开始逐一相乘，将乘积得数筛去，直到该素数为 x 的最小质因数为止。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"> <span class="type">int</span> pr[N/<span class="number">5</span>], ct; </span><br><span class="line">isP[N];<span class="comment">// true表示不是素数 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123; <span class="type">clock_t</span> start, end; start = <span class="built_in">clock</span>(); isP[<span class="number">1</span>] = <span class="literal">true</span>; <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; N; ++i) &#123; <span class="keyword">if</span> (!isP[i]) pr[++ct] = i; <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j&lt;=ct &amp;&amp; <span class="number">1LL</span>*pr[j]*i&lt;N; ++j) &#123; isP[pr[j]*i] = <span class="literal">true</span>; <span class="keyword">if</span> (i%pr[j] == <span class="number">0</span>) <span class="keyword">break</span>; &#125; &#125; end = <span class="built_in">clock</span>(); <span class="built_in">printf</span>(<span class="string">&quot;time: %d\n&quot;</span>, end-start); &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mfsteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mfsteam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「一本通 6.2 练习 1」质因数分解</title>
      <link href="/2023/07/12/%E3%80%8C%E4%B8%80%E6%9C%AC%E9%80%9A-6-2-%E7%BB%83%E4%B9%A0-1%E3%80%8D%E8%B4%A8%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3/"/>
      <url>/2023/07/12/%E3%80%8C%E4%B8%80%E6%9C%AC%E9%80%9A-6-2-%E7%BB%83%E4%B9%A0-1%E3%80%8D%E8%B4%A8%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><strong>原题来自：NOIP 2012 普及组</strong></p><p>已知正整数 n 是两个不同的质数的乘积，试求出较大的那个质数。<br>输入格式</p><hr><p>输入只有一行，包含一个正整数 n。<br>输出格式</p><hr><h2 id="输出只有一行，包含一个正整数-p，即较大的那个质数。样例"><a href="#输出只有一行，包含一个正整数-p，即较大的那个质数。样例" class="headerlink" title="输出只有一行，包含一个正整数 p，即较大的那个质数。样例"></a>输出只有一行，包含一个正整数 p，即较大的那个质数。<br>样例</h2><h2 id="输入数据-1"><a href="#输入数据-1" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><pre><code>21</code></pre><h2 id="输出数据-1"><a href="#输出数据-1" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><pre><code>7</code></pre><h2 id="数据范围与提示"><a href="#数据范围与提示" class="headerlink" title="数据范围与提示"></a>数据范围与提示</h2><p>对于 30% 的数据，n≤1000；<br>对于全部数据，6≤n≤2×109。</p><p>答案:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">as</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(a); i++) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a % i == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a/i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">cout &lt;&lt; <span class="built_in">as</span>(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1>]]></content>
      
      
      <categories>
          
          <category> 沐枫答案 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>快速幂-一本通「一本通 6.1 例 1」序列的第 k 个数</title>
      <link href="/2023/07/12/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
      <url>/2023/07/12/%E5%BF%AB%E9%80%9F%E5%B9%82/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">as</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a,<span class="type">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p &amp; <span class="number">1</span>)ans = ans * a % <span class="number">200907</span>;</span><br><span class="line">        a = a * a % <span class="number">200907</span>, p &gt;&gt;= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> a, b, c, k;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; k;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (b - a == c - b) &#123;</span><br><span class="line">            ans = (a + (k - <span class="number">1</span>) * (c - b)) % <span class="number">200907</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ans = a * <span class="built_in">as</span>(b / a, k - <span class="number">1</span>) % <span class="number">200907</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 沐枫sun1330 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>入门-搜索、贪心和动态规划的区别与联系</title>
      <link href="/2023/07/12/%E5%85%A5%E9%97%A8-%E6%90%9C%E7%B4%A2%E3%80%81%E8%B4%AA%E5%BF%83%E5%92%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/"/>
      <url>/2023/07/12/%E5%85%A5%E9%97%A8-%E6%90%9C%E7%B4%A2%E3%80%81%E8%B4%AA%E5%BF%83%E5%92%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="有一类问题，可以划分出多个阶段完成，每个阶段又可以分出多种不同的状态（阶段与状态划分）。搜索的时间复杂度过大"><a href="#有一类问题，可以划分出多个阶段完成，每个阶段又可以分出多种不同的状态（阶段与状态划分）。搜索的时间复杂度过大" class="headerlink" title="有一类问题，可以划分出多个阶段完成，每个阶段又可以分出多种不同的状态（阶段与状态划分）。搜索的时间复杂度过大"></a>有一类问题，可以划分出多个阶段完成，每个阶段又可以分出多种不同的状态（<strong>阶段与状态划分</strong>）。<br>搜索的时间复杂度过大</h2><p>这类问题当然可以用搜索进行暴力枚举，但是时间复杂度很高，通常是指数级的，无法接受。仔细分析后，我们如果能得出如下结论：</p><p>每一阶段需要做出的决策，只取决于之前阶段的情况，与之后阶段的情况无关（<strong>无后效性原则</strong>）。</p><p>那么我们就应该利用这样的性质进行有效剪枝，尽早去掉不需要的子问题集合（即提前判断出一些不可能得出最优解的集合，将它们直接跳过），只保留能够产生最优解的子问题集合，从而大大提高算法效率。</p><h2 id="贪心和动态规划（Dynamic-Programming，简称-DP）就是解决这类问题的最佳选择。贪心和动态规划（DP）的区别"><a href="#贪心和动态规划（Dynamic-Programming，简称-DP）就是解决这类问题的最佳选择。贪心和动态规划（DP）的区别" class="headerlink" title="贪心和动态规划（Dynamic Programming，简称 DP）就是解决这类问题的最佳选择。贪心和动态规划（DP）的区别"></a>贪心和动态规划（Dynamic Programming，简称 DP）就是解决这类问题的最佳选择。<br>贪心和动态规划（DP）的区别</h2><p>贪心是一种通过每一个阶段的最优解就可推出全局最优解的算法，其中每阶段的最优解即为该阶段所有状态的最优解。因此，贪心在每个阶段只需保留一个数（最优解），通常一层循环把所有阶段跑一遍即可。</p><p>例如：给定一个 $m\times n$ 的矩阵，从每一行选取一个值，使得总和最大。我们直接采用贪心的思路，将原问题划分为 $m$ 个阶段（每一行为一个阶段），每个阶段的最优解（每一行的最大值）累加到一起，就直接可以导出全局最优解。</p><p>但不是所有问题都可以用贪心来解决，例如“<a href="https://www.mfstem.org/p/545">数字金字塔</a>”，如果按照贪心算法，则只会选择出一条路线：$13\rightarrow 11\rightarrow 12\rightarrow 14\rightarrow 13$，结果为 $63$，而答案应该为：$13\rightarrow 8\rightarrow 26\rightarrow 15\rightarrow 24$，得到 $86$。</p><p><img src="https://www.feihua.life/2023/06/02/%E5%85%A5%E9%97%A8-%E6%90%9C%E7%B4%A2%E3%80%81%E8%B4%AA%E5%BF%83%E5%92%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E8%81%94%E7%B3%BB/%E6%95%B0%E5%AD%97%E9%87%91%E5%AD%97%E5%A1%94.png" alt="数字金字塔"></p><p>数字金字塔</p><p>原因在于从 $13$ 往下，虽然走 $8$ 不是第一阶段的最优解，却在后面阶段逐步增大，最终成为了全局最优解。</p><h2 id="因此，我们说贪心和DP都是全局最优解包含局部最优解，但它们的区别在于，贪心是阶段最优解直接导致全局最优解，而DP是每个阶段中的每个状态的最优解，导致全局最优解，它是比贪心更细粒度的递推，细化到了状态的层面。所以，我们如果通过分析，发现问题是可以划分阶段的，无后效性的，且不能直接用阶段最优解导出全局最优解的，就可以选择DP来完成。"><a href="#因此，我们说贪心和DP都是全局最优解包含局部最优解，但它们的区别在于，贪心是阶段最优解直接导致全局最优解，而DP是每个阶段中的每个状态的最优解，导致全局最优解，它是比贪心更细粒度的递推，细化到了状态的层面。所以，我们如果通过分析，发现问题是可以划分阶段的，无后效性的，且不能直接用阶段最优解导出全局最优解的，就可以选择DP来完成。" class="headerlink" title="因此，我们说贪心和DP都是全局最优解包含局部最优解，但它们的区别在于，贪心是阶段最优解直接导致全局最优解，而DP是每个阶段中的每个状态的最优解，导致全局最优解，它是比贪心更细粒度的递推，细化到了状态的层面。所以，我们如果通过分析，发现问题是可以划分阶段的，无后效性的，且不能直接用阶段最优解导出全局最优解的，就可以选择DP来完成。"></a>因此，我们说贪心和DP都是全局最优解包含局部最优解，但它们的区别在于，贪心是阶段最优解直接导致全局最优解，而DP是每个阶段中的每个状态的最优解，导致全局最优解，它是比贪心更细粒度的递推，细化到了状态的层面。所以，我们如果通过分析，发现问题是可以划分阶段的，无后效性的，且不能直接用阶段最优解导出全局最优解的，就可以选择DP来完成。</h2><h2 id="DP-的步骤"><a href="#DP-的步骤" class="headerlink" title="DP 的步骤"></a>DP 的步骤</h2><p>DP类题目的设计步骤通常为：</p><ol><li><p>划分阶段</p></li><li><p>设定每一阶段的状态，以及最终答案需要的状态。</p></li></ol><p>通常是通过答案的需要来设定状态。两种状态通常是一致的，也有些题目需要先设计一个比较好求解（效率高）的状态，最后通过循环或者其他转换得到答案的状态。</p><ol start="3"><li><p>设计从上一个阶段的某个状态，到当前阶段的某个状态的转移方程（递推式）</p></li><li><p>确定转移方程的初值</p></li></ol><p>我们以 <a href="https://www.mfstem.org/p/565">01背包问题</a> 为例：</p><ol><li>划分阶段</li></ol><p>按考虑过多少件物品来划分阶段，通常阶段就是第一维，$f[i]$ 即表示考虑了前 $i$ 件物品。</p><ol start="2"><li>设定状态</li></ol><p>由于要求的就是最大<strong>价值</strong>，所以<strong>数组的值</strong>就应该设为每个状态的最大价值（即每个阶段的每个状态的局部最优解）。那么状态怎么划分呢？再看题目——要求的是不超过重量 $m$ 的最大价值，那么显然我们应该把重量作为一个状态进行划分，于是将重量作为一个状态维度，$f[i][j]$ 表示前 $i$ 件物品，重量不超过 $j$ 时的最大价值，最终答案应该为：$f[n][m]$。</p><ol start="3"><li>状态转移方程</li></ol><p>$f[i][j] &#x3D; f[i-1][?]$，仔细思考不难发现：上一个阶段和这个阶段的最大区别，就在于第 $i$ 件物品，因此，这个状态转移一定是围绕第 $i$ 件物品来考虑的。</p><p>关于第 $i$ 件物品的决策只有 $2$ 种：选与不选。因此产生两种结果：</p><ul><li>不选第 $i$ 件</li></ul><p>第 $i$ 个阶段的状态 $j$ 与第 $i-1$ 个阶段的状态 $j$ 一样，$f[i][j] &#x3D; f[i-1][j];$</p><ul><li>选第 $i$ 件</li></ul><p>加入第 $i$ 件物品前，第 $i-1$ 个阶段的状态应该为 $j-w[i]$，新的状态 $j$ 的价值应该为两者之和，即 $f[i][j] &#x3D; f[i-1][j-w[i]] + v[i];$</p><p>综合以上两种决策，状态 $f[i][j]$ 应在这两种决策中取最大值，即</p><p>$f[i][j] &#x3D; max(f[i-1][j], f[i-1][j-w[i]]+v[i]);$</p><ol start="4"><li>对于第 $1$ 个阶段来说，它的上一个阶段有 $0$ 件物品，任意一个状态的价值都设为 $0$ 即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> -飞花 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>「一本通 6.1 例 1」序列的第 k 个数</title>
      <link href="/2023/07/12/%E3%80%8C%E4%B8%80%E6%9C%AC%E9%80%9A-6-1-%E4%BE%8B-1%E3%80%8D%E5%BA%8F%E5%88%97%E7%9A%84%E7%AC%AC-k-%E4%B8%AA%E6%95%B0/"/>
      <url>/2023/07/12/%E3%80%8C%E4%B8%80%E6%9C%AC%E9%80%9A-6-1-%E4%BE%8B-1%E3%80%8D%E5%BA%8F%E5%88%97%E7%9A%84%E7%AC%AC-k-%E4%B8%AA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="BSNY-在学等差数列和等比数列，当已知前三项时，就可以知道是等差数列还是等比数列。现在给你序列的前三项，这个序列要么是等差序列，要么是等比序列，你能求出第-k-项的值吗。-如果第-k-项的值太大，对-200907-取模。输入格式"><a href="#BSNY-在学等差数列和等比数列，当已知前三项时，就可以知道是等差数列还是等比数列。现在给你序列的前三项，这个序列要么是等差序列，要么是等比序列，你能求出第-k-项的值吗。-如果第-k-项的值太大，对-200907-取模。输入格式" class="headerlink" title="BSNY 在学等差数列和等比数列，当已知前三项时，就可以知道是等差数列还是等比数列。现在给你序列的前三项，这个序列要么是等差序列，要么是等比序列，你能求出第 k 项的值吗。 如果第 k 项的值太大，对 200907 取模。输入格式"></a>BSNY 在学等差数列和等比数列，当已知前三项时，就可以知道是等差数列还是等比数列。现在给你序列的前三项，这个序列要么是等差序列，要么是等比序列，你能求出第 k 项的值吗。 如果第 k 项的值太大，对 200907 取模。<br>输入格式</h2><h4 id="第一行一个整数-T，表示有-T-组测试数据；"><a href="#第一行一个整数-T，表示有-T-组测试数据；" class="headerlink" title="第一行一个整数 T，表示有 T 组测试数据；"></a>第一行一个整数 T，表示有 T 组测试数据；</h4><h2 id="对于每组测试数据，输入前三项-a-b-c，然后输入-k。输出格式"><a href="#对于每组测试数据，输入前三项-a-b-c，然后输入-k。输出格式" class="headerlink" title="对于每组测试数据，输入前三项 a,b,c，然后输入 k。输出格式"></a>对于每组测试数据，输入前三项 a,b,c，然后输入 k。<br>输出格式</h2><h2 id="对于每组数据输出第-k-项的值，对-200907-取模。样例"><a href="#对于每组数据输出第-k-项的值，对-200907-取模。样例" class="headerlink" title="对于每组数据输出第 k 项的值，对 200907 取模。样例"></a>对于每组数据输出第 k 项的值，对 200907 取模。<br>样例</h2><h2 id="输入数据-1"><a href="#输入数据-1" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><pre><code>21 2 3 51 2 4 5</code></pre><h2 id="输出数据-1"><a href="#输出数据-1" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><pre><code>516</code></pre><h2 id="第一组是等差序列，第二组是等比数列。数据范围与提示"><a href="#第一组是等差序列，第二组是等比数列。数据范围与提示" class="headerlink" title="第一组是等差序列，第二组是等比数列。数据范围与提示"></a>第一组是等差序列，第二组是等比数列。<br>数据范围与提示</h2><p>对于全部数据，保证等比与等差为整数。</p><p>1≤T≤100</p><p>1≤a≤b≤c≤109</p><p>1≤k≤109。</p>]]></content>
      
      
      <categories>
          
          <category> 沐枫答案 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
